name: Build and Test on Linux
on: [push]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
    - name: Install the required Git version for GitHub actions to function.
      run: |
        sudo add-apt-repository ppa:git-core/ppa
        sudo apt-get update
        sudo apt-get install git -y
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Install Gazebo
      run: |
        apt-key adv --keyserver keyserver.ubuntu.com --recv-keys D2486D2DD83DB69272AFE98867170598AF249743
        echo deb http://packages.osrfoundation.org/gazebo/ubuntu-stable $(. /etc/os-release && echo "${VERSION_CODENAME}") main > /etc/apt/sources.list.d/gazebo-stable.list
        apt-get update
        DEBIAN_FRONTEND=noninteractive apt-get install --yes --no-install-recommends \
          gazebo9 \
          libgazebo9-dev
        rm -rf /var/lib/apt/lists/*
      shell: bash {0}
    - name: Install ROS Melodic
      run: |
        apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
        echo "deb http://packages.ros.org/ros/ubuntu $(. /etc/os-release && echo "${VERSION_CODENAME}") main" > /etc/apt/sources.list.d/ros-latest.list
        apt-get update
        DEBIAN_FRONTEND=noninteractive apt-get install --yes --no-install-recommends \
          build-essential \
          python-catkin-tools \
          python-pip \
          python-rosdep \
          python-tk \
          ros-melodic-controller-manager \
          ros-melodic-desktop-full \
          ros-melodic-gazebo-ros-control \
          ros-melodic-gazebo-ros-pkgs \
          ros-melodic-hector-gazebo-plugins \
          ros-melodic-joint-state-controller \
          ros-melodic-joint-state-publisher \
          ros-melodic-joint-state-publisher-gui \
          ros-melodic-effort-controllers \
          ros-melodic-position-controllers \
          ros-melodic-velocity-controllers
        rm -rf /var/lib/apt/lists/*
      shell: bash {0}
    - name: Build
      run: |
        source /opt/ros/melodic/setup.sh
        sudo apt update
        rosdep init
        rosdep update
        rosdep install --from-paths src --ignore-src -r -y
        pip install circle-fit
        catkin_make
      shell: bash {0}
      working-directory: catkin_ws
    - name: Run tests
      run: |
        export ROS_HOME=$PWD/ros_home
        source /opt/ros/melodic/setup.sh
        source devel/setup.sh
        chmod +x src/demo/nodes/demo.py
        rosnode kill -a
        xvfb-run rostest demo demo.test
      shell: bash {0}
      working-directory: catkin_ws
    - name: Archive test results # workaround: https://github.com/actions/upload-artifact/issues/76
      run: zip -r results.zip ros_home
      working-directory: catkin_ws
    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
        path: catkin_ws/results.zip
